name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          openjdk-11-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        pip install kivy innertube requests

    - name: Install Buildozer
      run: |
        git clone https://github.com/kivy/buildozer.git
        cd buildozer
        python setup.py install
        cd ..

    - name: Prepare buildozer.spec
      run: |
        cp buildozer.spec.example buildozer.spec
        sed -i 's/requirements = python3,kivy/requirements = python3,kivy,innertube,requests/' buildozer.spec
        sed -i 's/android.permissions =/android.permissions = INTERNET/' buildozer.spec

    - name: Build APK
      run: |
        buildozer android debug

    - name: Create Release Folder
      run: |
        mkdir -p release/apks
        cp bin/*.apk release/apks/
        ls release/apks/

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: ytify-apk
        path: release/apks/
        retention-days: 30

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release/apks/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
