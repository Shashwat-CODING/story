name: Build Ytify Multiplatform Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            artifact-name: ytify-linux
            extension: ''
          - os: macos-latest
            platform: macos
            artifact-name: ytify-macos
            extension: ''
          - os: windows-latest
            platform: windows
            artifact-name: ytify-windows
            extension: '.exe'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pywebview flask flask-cors requests innertube

    - name: Download icon
      run: |
        curl -L https://raw.githubusercontent.com/${{ github.repository }}/main/icon.ico -o icon.ico
      if: matrix.platform == 'windows'
      continue-on-error: true

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed ${{ matrix.platform == 'windows' && '--icon=icon.ico' || '' }} Ytify.py

    - name: Rename executable
      run: |
        cd dist
        mv Ytify${{ matrix.extension }} ${{ matrix.artifact-name }}${{ matrix.extension }}
      shell: bash

    - name: Generate SHA256 Checksum
      run: |
        cd dist
        sha256sum ${{ matrix.artifact-name }}${{ matrix.extension }} > ${{ matrix.artifact-name }}.sha256
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: |
          dist/${{ matrix.artifact-name }}${{ matrix.extension }}
          dist/${{ matrix.artifact-name }}.sha256
        retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          **/ytify-*
          **/ytify-*.sha256
        generate_release_notes: true
        draft: false
        prerelease: false

    - name: Print Release Assets
      run: |
        echo "Release assets:"
        ls -R
