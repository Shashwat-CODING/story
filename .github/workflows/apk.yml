name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          openjdk-11-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \
          cmake \
          libssl-dev \
          libffi-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools
        pip install buildozer cython
        pip install kivy innertube requests

    - name: Install Buildozer
      run: |
        git clone https://github.com/kivy/buildozer.git
        cd buildozer
        python setup.py install
        cd ..

    - name: Prepare buildozer.spec
      run: |
        cp buildozer.spec buildozer.spec.backup
        sed -i 's/requirements = .*/requirements = python3,kivy,innertube,requests/' buildozer.spec
        sed -i 's/android.permissions =/android.permissions = INTERNET/' buildozer.spec

    - name: Install p4a dependencies
      run: |
        pip install python-for-android
        pip install --upgrade cython
        pip install "urllib3<2.0"

    - name: Build APK
      run: |
        buildozer android debug || echo "Build failed"

    - name: Create Release Folder
      run: |
        mkdir -p release/apks
        cp bin/*.apk release/apks/ || echo "No APK found"
        ls -la release/apks/

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ytify-apk
        path: release/apks/
        retention-days: 30

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release/apks/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Debug Information
      if: failure()
      run: |
        echo "Build directory contents:"
        ls -la
        echo "Buildozer spec contents:"
        cat buildozer.spec
        echo "Python version:"
        python --version
        echo "Pip list:"
        pip list
        echo "System information:"
        uname -a
        cat /etc/os-release
